spring:
  application:
    name: communications-service  # Nom du service dans Eureka
  datasource:
    url: jdbc:postgresql://localhost:5432/communicationsdb
    username: postgres
    password: "123456"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    loadbalancer:
      retry:
        enabled: true

# Configuration Eureka
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/  # URL du serveur Eureka
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

# Configuration Feign (pour les appels HTTP entre microservices)
feign:
  client:
    config:
      default:
        connect-timeout: 5000
        read-timeout: 5000
  circuitbreaker:
    enabled: true

# Actuator (monitoring)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    org.springframework: INFO
    com.example.communications: DEBUG

server:
  port: 8081  # Port du microservice